@use 'sass:math';

$utilities: (
  'height': (
    'prefix': 'h',
    'values': (
      'auto': auto,
      '20': 20%,
      '40': 40%,
      '60': 60%,
      '80': 80%,
      '100': 100%,
    ),
  ),
  'width': (
    'prefix': 'w',
    'values': (
      '5': 5%,
      '10': 10%,
      '20': 20%,
      '30': 30%,
      '40': 40%,
      '60': 60%,
      '80': 80%,
      '100': 100%,
    ),
  ),
  'padding': (
    'prefix': 'p',
    'values': (
      '0': 0,
      '1': $base-padding,
      '2': $base-padding * 2,
      '3': $base-padding * 4,
      '4': $base-padding * 6,
      '5': $base-padding * 8,
    ),
  ),
  'padding-left': (
    'prefix': 'pl',
    'values': (
      '0': 0,
      '1': $base-padding,
      '2': $base-padding * 2,
      '3': $base-padding * 4,
      '4': $base-padding * 6,
      '5': $base-padding * 8,
    ),
  ),
  'padding-right': (
    'prefix': 'pr',
    'values': (
      '0': 0,
      '1': $base-padding,
      '2': $base-padding * 2,
      '3': $base-padding * 4,
      '4': $base-padding * 6,
      '5': $base-padding * 8,
    ),
  ),
  'padding-top': (
    'prefix': 'pt',
    'values': (
      '0': 0,
      '1': $base-padding,
      '2': $base-padding * 2,
      '3': $base-padding * 4,
      '4': $base-padding * 6,
      '5': $base-padding * 8,
    ),
  ),
  'padding-bottom': (
    'prefix': 'pb',
    'values': (
      '0': 0,
      '1': $base-padding,
      '2': $base-padding * 2,
      '3': $base-padding * 4,
      '4': $base-padding * 6,
      '5': $base-padding * 8,
    ),
  ),
  'margin': (
    'prefix': 'm',
    'values': (
      '0': 0,
      '1': $base-margin,
      '2': $base-margin * 2,
      '3': $base-margin * 4,
      '4': $base-margin * 6,
      '5': $base-margin * 8,
    ),
  ),
  'margin-left': (
    'prefix': 'ml',
    'values': (
      '0': 0,
      '1': $base-margin,
      '2': $base-margin * 2,
      '3': $base-margin * 4,
      '4': $base-margin * 6,
      '5': $base-margin * 8,
    ),
  ),
  'margin-right': (
    'prefix': 'mr',
    'values': (
      '0': 0,
      '1': $base-margin,
      '2': $base-margin * 2,
      '3': $base-margin * 4,
      '4': $base-margin * 6,
      '5': $base-margin * 8,
    ),
  ),
  'margin-top': (
    'prefix': 'mt',
    'values': (
      '0': 0,
      '1': $base-margin,
      '2': $base-margin * 2,
      '3': $base-margin * 4,
      '4': $base-margin * 6,
      '5': $base-margin * 8,
    ),
  ),
  'margin-bottom': (
    'prefix': 'mb',
    'values': (
      '0': 0,
      '1': $base-margin,
      '2': $base-margin * 2,
      '3': $base-margin * 4,
      '4': $base-margin * 6,
      '5': $base-margin * 8,
    ),
  ),
  'opacity': (
    'prefix': 'o',
    'values': (
      '0': 0,
      '1': 0.1,
      '2': 0.2,
      '3': 0.3,
      '4': 0.4,
      '5': 0.5,
      '6': 0.6,
      '7': 0.7,
      '8': 0.8,
      '9': 0.9,
      '10': 1,
    ),
  ),
  'border-radius': (
    'prefix': 'br',
    'values': (
      'default': $base-border-radius,
      'none': 0,
      'xs': math.div($base-border-radius, 4),
      'sm': math.div($base-border-radius, 2),
      'lg': $base-border-radius * 2,
      'full': 50%,
    ),
  ),
  'display': (
    'prefix': 'display',
    'values': (
      'n': none,
      'b': block,
      'f': flex,
      'i': inline,
      'i-b': inline-block,
    ),
  ),
  'font-size': (
    'prefix': 'font',
    'values': (
      'sm': $font-size-sm,
      'md': $font-size-md,
      'lg': $font-size-lg,
      'xl': $font-size-xl,
      'xxl': $font-size-xxl,
      'xxxl': $font-size-xxxl,
    ),
  ),
  'font-family': (
    'prefix': 'family',
    'values': (
      'rubik': $font-rubik,
    ),
  ),
  'font-weight': (
    'prefix': 'text',
    'values': (
      'light': $font-light,
      'regular': $font-regular,
      'medium': $font-medium,
      'bold': $font-bold,
      'extra-bold': $font-extra-bold,
    ),
  ),
  'text-transform': (
    'prefix': 'transform',
    'values': (
      'uppercase': uppercase,
    ),
  ),
  'text-align': (
    'prefix': 'align',
    'values': (
      'center': center,
    ),
  ),
  'object-fit': (
    'prefix': 'fit',
    'values': (
      'cover': cover,
    ),
  ),
  'position': (
    'prefix': 'pos',
    'values': (
      'relative': relative,
      'absolute': absolute,
      'fixed': fixed,
    ),
  ),
  'pointer-events': (
    'prefix': 'pointer',
    'values': (
      'none': none,
      'auto': auto,
    ),
  ),
);

.w-h-100 {
  width: 100%;
  height: 100%;
}

.centered {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// generate utility classes
@each $property, $map in $utilities {
  $prefix: map-get($map, 'prefix');
  $values: map-get($map, 'values');

  @each $k, $v in $values {
    @if ($k == 'default') {
      .#{$prefix} {
        #{$property}: $v;
      }
    } @else {
      @debug #{$prefix}-#{$k};
      .#{$prefix}-#{$k} {
        #{$property}: $v;
      }
    }
  }
}
